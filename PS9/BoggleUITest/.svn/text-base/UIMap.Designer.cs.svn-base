// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 11.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace BoggleUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Test1 - Use 'Test1Params' to pass parameters into this method.
        /// </summary>
        public void Test1()
        {
            #region Variable Declarations
            WpfEdit uIPlayer_name_textboxEdit = this.UIBoggleWindow.UIPlayer_name_textboxEdit;
            WpfButton uIPLAYButton = this.UIBoggleWindow.UIPLAYButton;
            WpfButton uITButton = this.UIBoggleWindow1.UITButton;
            WpfButton uIIButton = this.UIBoggleWindow1.UIIButton;
            WpfButton uICButton = this.UIBoggleWindow1.UICButton;
            WpfButton uIKButton = this.UIBoggleWindow1.UIKButton;
            WpfButton uIENTERButton = this.UIBoggleWindow1.UIENTERButton;
            WpfButton uITButton1 = this.UIBoggleWindow1.UITButton1;
            WpfButton uIEButton = this.UIBoggleWindow1.UIEButton;
            WpfButton uINButton = this.UIBoggleWindow1.UINButton;
            WpfButton uIWButton = this.UIBoggleWindow1.UIWButton;
            WpfButton uIEButton1 = this.UIBoggleWindow1.UIEButton1;
            WpfButton uIIButton1 = this.UIBoggleWindow1.UIIButton1;
            WpfButton uILButton = this.UIBoggleWindow1.UILButton;
            WpfButton uIQUITButton = this.UIBoggleWindow1.UIQUITButton;
            #endregion

            // Last mouse action was not recorded.

            // Type 'Tim' in 'player_name_textbox' text box
            uIPlayer_name_textboxEdit.Text = this.Test1Params.UIPlayer_name_textboxEditText;

            // Click 'PLAY!' button
            Mouse.Click(uIPLAYButton, new Point(50, 24));

            // Click 'T' button
            Mouse.Click(uITButton, new Point(31, 36));

            // Click 'I' button
            Mouse.Click(uIIButton, new Point(24, 35));

            // Click 'C' button
            Mouse.Click(uICButton, new Point(20, 35));

            // Click 'K' button
            Mouse.Click(uIKButton, new Point(23, 22));

            // Click 'ENTER' button
            Mouse.Click(uIENTERButton, new Point(28, 15));

            // Click 'T' button
            Mouse.Click(uITButton1, new Point(31, 36));

            // Click 'E' button
            Mouse.Click(uIEButton, new Point(29, 7));

            // Click 'N' button
            Mouse.Click(uINButton, new Point(32, 25));

            // Click 'ENTER' button
            Mouse.Click(uIENTERButton, new Point(18, 14));

            // Click 'W' button
            Mouse.Click(uIWButton, new Point(34, 38));

            // Click 'I' button
            Mouse.Click(uIIButton, new Point(28, 35));

            // Click 'C' button
            Mouse.Click(uICButton, new Point(30, 7));

            // Click 'K' button
            Mouse.Click(uIKButton, new Point(28, 24));

            // Click 'ENTER' button
            Mouse.Click(uIENTERButton, new Point(12, 13));

            // Click 'T' button
            Mouse.Click(uITButton, new Point(29, 22));

            // Click 'E' button
            Mouse.Click(uIEButton1, new Point(22, 26));

            // Click 'ENTER' button
            Mouse.Click(uIENTERButton, new Point(23, 22));

            // Click 'N' button
            Mouse.Click(uINButton, new Point(30, 41));

            // Click 'I' button
            Mouse.Click(uIIButton1, new Point(23, 32));

            // Click 'L' button
            Mouse.Click(uILButton, new Point(21, 31));

            // Click 'ENTER' button
            Mouse.Click(uIENTERButton, new Point(18, 19));

            // Click 'T' button
            Mouse.Click(uITButton1, new Point(31, 41));

            // Click 'QUIT' button
            Mouse.Click(uIQUITButton, new Point(40, 15));
        }
        
        #region Properties
        public virtual Test1Params Test1Params
        {
            get
            {
                if ((this.mTest1Params == null))
                {
                    this.mTest1Params = new Test1Params();
                }
                return this.mTest1Params;
            }
        }
        
        public UIBoggleWindow UIBoggleWindow
        {
            get
            {
                if ((this.mUIBoggleWindow == null))
                {
                    this.mUIBoggleWindow = new UIBoggleWindow();
                }
                return this.mUIBoggleWindow;
            }
        }
        
        public UIBoggleWindow1 UIBoggleWindow1
        {
            get
            {
                if ((this.mUIBoggleWindow1 == null))
                {
                    this.mUIBoggleWindow1 = new UIBoggleWindow1();
                }
                return this.mUIBoggleWindow1;
            }
        }
        #endregion
        
        #region Fields
        private Test1Params mTest1Params;
        
        private UIBoggleWindow mUIBoggleWindow;
        
        private UIBoggleWindow1 mUIBoggleWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Test1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class Test1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Tim' in 'player_name_textbox' text box
        /// </summary>
        public string UIPlayer_name_textboxEditText = "Tim";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIBoggleWindow : WpfWindow
    {
        
        public UIBoggleWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Boggle";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Boggle");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIPlayer_name_textboxEdit
        {
            get
            {
                if ((this.mUIPlayer_name_textboxEdit == null))
                {
                    this.mUIPlayer_name_textboxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIPlayer_name_textboxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "player_name_textbox";
                    this.mUIPlayer_name_textboxEdit.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIPlayer_name_textboxEdit;
            }
        }
        
        public WpfButton UIPLAYButton
        {
            get
            {
                if ((this.mUIPLAYButton == null))
                {
                    this.mUIPLAYButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIPLAYButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "play_button";
                    this.mUIPLAYButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIPLAYButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIPlayer_name_textboxEdit;
        
        private WpfButton mUIPLAYButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "11.0.60315.1")]
    public class UIBoggleWindow1 : WpfWindow
    {
        
        public UIBoggleWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Boggle";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.FilterProperties[WpfWindow.PropertyNames.OrderOfInvocation] = "2";
            this.WindowTitles.Add("Boggle");
            #endregion
        }
        
        #region Properties
        public WpfButton UITButton
        {
            get
            {
                if ((this.mUITButton == null))
                {
                    this.mUITButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUITButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_2";
                    this.mUITButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUITButton;
            }
        }
        
        public WpfButton UIIButton
        {
            get
            {
                if ((this.mUIIButton == null))
                {
                    this.mUIIButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIIButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_7";
                    this.mUIIButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIIButton;
            }
        }
        
        public WpfButton UICButton
        {
            get
            {
                if ((this.mUICButton == null))
                {
                    this.mUICButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_11";
                    this.mUICButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUICButton;
            }
        }
        
        public WpfButton UIKButton
        {
            get
            {
                if ((this.mUIKButton == null))
                {
                    this.mUIKButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_8";
                    this.mUIKButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIKButton;
            }
        }
        
        public WpfButton UIENTERButton
        {
            get
            {
                if ((this.mUIENTERButton == null))
                {
                    this.mUIENTERButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIENTERButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "enter_word_button";
                    this.mUIENTERButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIENTERButton;
            }
        }
        
        public WpfButton UITButton1
        {
            get
            {
                if ((this.mUITButton1 == null))
                {
                    this.mUITButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUITButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_5";
                    this.mUITButton1.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUITButton1;
            }
        }
        
        public WpfButton UIEButton
        {
            get
            {
                if ((this.mUIEButton == null))
                {
                    this.mUIEButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIEButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_9";
                    this.mUIEButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIEButton;
            }
        }
        
        public WpfButton UINButton
        {
            get
            {
                if ((this.mUINButton == null))
                {
                    this.mUINButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUINButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_10";
                    this.mUINButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUINButton;
            }
        }
        
        public WpfButton UIWButton
        {
            get
            {
                if ((this.mUIWButton == null))
                {
                    this.mUIWButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIWButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_6";
                    this.mUIWButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIWButton;
            }
        }
        
        public WpfButton UIEButton1
        {
            get
            {
                if ((this.mUIEButton1 == null))
                {
                    this.mUIEButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIEButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_3";
                    this.mUIEButton1.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIEButton1;
            }
        }
        
        public WpfButton UIIButton1
        {
            get
            {
                if ((this.mUIIButton1 == null))
                {
                    this.mUIIButton1 = new WpfButton(this);
                    #region Search Criteria
                    this.mUIIButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_15";
                    this.mUIIButton1.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIIButton1;
            }
        }
        
        public WpfButton UILButton
        {
            get
            {
                if ((this.mUILButton == null))
                {
                    this.mUILButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUILButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "bb_button_16";
                    this.mUILButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUILButton;
            }
        }
        
        public WpfButton UIQUITButton
        {
            get
            {
                if ((this.mUIQUITButton == null))
                {
                    this.mUIQUITButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIQUITButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "quit_button";
                    this.mUIQUITButton.WindowTitles.Add("Boggle");
                    #endregion
                }
                return this.mUIQUITButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUITButton;
        
        private WpfButton mUIIButton;
        
        private WpfButton mUICButton;
        
        private WpfButton mUIKButton;
        
        private WpfButton mUIENTERButton;
        
        private WpfButton mUITButton1;
        
        private WpfButton mUIEButton;
        
        private WpfButton mUINButton;
        
        private WpfButton mUIWButton;
        
        private WpfButton mUIEButton1;
        
        private WpfButton mUIIButton1;
        
        private WpfButton mUILButton;
        
        private WpfButton mUIQUITButton;
        #endregion
    }
}
